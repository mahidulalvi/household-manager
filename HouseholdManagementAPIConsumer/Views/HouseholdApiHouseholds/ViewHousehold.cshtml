@model HouseholdViewModel

@{
    ViewBag.Title = "ViewHousehold";
}

@if(ViewBag.NoSuchUser != null && ViewBag.NoSuchUser == true)
{
    <p style="color: blue; font-weight: bold">No user with that email!</p>
}


<h2>View Household</h2>

@Html.ActionLink("Edit household", "EditHousehold", "HouseholdApiHouseholds", new { householdId = Model.Id }, htmlAttributes: null)


<div>
    <form method="post" action="@Url.Action("LeaveHousehold", "HouseholdApiHouseholdMembers", new { householdId = Model.Id })">
        <button type="submit" style="color: red">Leave household</button>
    </form>
</div>


<p>@Html.DisplayForModel(Model)</p>

<a href="#" onclick="ViewMembersAJAX()">View Members</a>
<div id="viewMembersHolder">

</div>




<!-- Button trigger modal -->
<a class="btn invite-member-button" data-toggle="modal" href="#invitemembersModal" onclick="ModalContentFetcher()">Invite household members</a>

<!-- Modal -->
<div class="modal fade" id="invitemembersModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Invite member</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body invite-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    function ModalContentFetcher() {
        return fetch('../../HouseholdApIHouseholdMembers/_InviteHouseholdMember?householdId=@Model.Id', {
            method: "Get"
        }).then(
            function(response) {
                if (response.status !== 200) {
                    console.log('Looks like there was a problem. Status Code: ' +
                        response.status);
                    return;
                }
                console.log(response);

                response.text().then(function (data) {
                    console.log(data);
                    DomAdder(data);
                });
            }
        )
        .catch(function (err) {
                console.log('Fetch Error :-S', err);
        });
    }




    function DomAdder(receivedElement) {
        var domelement = document.querySelector(".invite-body");
        domelement.innerHTML = "";
        return domelement.insertAdjacentHTML('afterbegin', receivedElement);
    }


    function ViewMembersAJAX() {
        return fetch("../../@Url.Action("_ViewHouseholdMembers", "HouseholdApiHouseholdMembers", new { householdId = Model.Id })", {
            method: "Get"
        }).then(
            function(response) {
                if (response.status !== 200) {
                    console.log('Looks like there was a problem. Status Code: ' +
                        response.status);
                    return;
                }
                //console.log(response);

                response.text().then(function (data) {
                    //console.log(data);
                    DomAdderForViewingMembers(data);
                });
            }
        )
        .catch(function (err) {
                console.log('Fetch Error :-S', err);
        });
    }

    function DomAdderForViewingMembers(receivedElement) {
        var domelement2 = document.querySelector("#viewMembersHolder");
        domelement2.innerHTML = "";
        return domelement2.insertAdjacentHTML('afterbegin', receivedElement);
    }
</script>