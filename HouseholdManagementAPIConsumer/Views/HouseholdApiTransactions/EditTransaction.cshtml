@model EditTransactionViewModel

@{
    ViewBag.Title = "EditTransaction";
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






<h2>Edit Transaction</h2>


@if (ViewBag.HasErrored != null && ViewBag.HasErrored == true)
{
    <p>Something's not right. Please try again</p>
}
else
{
    if (ViewBag.NoCategories != null && ViewBag.NoCategories == true)
    {
        <p style="color: red">You must create a category first to edit a transaction!</p>
    }
    else
    {
        <form method="post">
            @Html.ValidationSummary(true)
            <div class="form-group">
                <p>
                    @Html.LabelFor(p => p.Title, new { @class = "text-info" })
                </p>
                @Html.ValidationMessageFor(p => p.Title)
                @Html.TextBoxFor(p => p.Title, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <p>
                    @Html.LabelFor(p => p.Description, new { @class = "text-info" })
                </p>
                @Html.ValidationMessageFor(p => p.Description)
                @Html.TextAreaFor(p => p.Description, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <p>
                    @Html.LabelFor(p => p.CategoryId, new { @class = "text-info" })
                </p>
                @*@Html.DropDownListFor(p => p.CategoryId, new SelectList(ViewBag.DropDownListForCategoryIds), "Select Category", new { @class = "form-control" })*@

                @*@Html.ListBoxFor(p => p.CategoryId, new SelectList(ViewBag.ListBoxForCategoryIds, "Value", "Text", new HtmlSelectListClassForCategory { Id = null, Name = "Select Category" }), new { @style = "width:200px;height:60px;" })*@

                @Html.ValidationMessageFor(p => p.CategoryId, "Category is required")
                @Html.DropDownListFor(p => p.CategoryId, new SelectList(ViewBag.ListBoxForCategoryIds, "Value", "Text", ""))
                @*@Html.DropDownListFor(p => p.CategoryId, ViewBag.ListBoxForCategoryIds as SelectList)*@

                @*Html.ListBoxFor(p => p.CategoryId, new SelectList(ViewBag.ListBoxForCategoryIds, "Value", "Text", ""))*@

            </div>

            <div class="form-group">
                <p>
                    @Html.LabelFor(p => p.Amount, new { @class = "text-info" })
                </p>
                @Html.ValidationMessageFor(p => p.Amount)
                @Html.TextAreaFor(p => p.Amount, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <p>
                    @Html.LabelFor(p => p.Date, new { @class = "text-info" })
                </p>
                @Html.ValidationMessageFor(p => p.Date)
                @Html.TextAreaFor(p => p.Date, new { @class = "form-control" })
            </div>


            <div class="form-group">
                <button type="submit">Submit</button>
            </div>
        </form>
    }
}