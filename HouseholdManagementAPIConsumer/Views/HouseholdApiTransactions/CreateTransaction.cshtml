@model CreateTransactionViewModel

@{
    /**/

    ViewBag.Title = "CreateTransaction";
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">
        $(function () {
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.transactionDate').datepicker(
                {
                    dateFormat: 'mm/dd/yy',
                    changeMonth: true,
                    changeYear: true
                });
        })
    </script>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet">



<h2>Create Transaction</h2>

@if (ViewBag.HasErrored != null && ViewBag.HasErrored == true)
{
    <p>Something's not right. Please try again</p>
}
else
{
    if (ViewBag.NoCategories != null && ViewBag.NoCategories == true)
    {
        <p style="color: red">You must create a category first to create a transaction!</p>
    }
    else
    {
        <div id="form-holder">
            <form method="post">
                @Html.ValidationSummary(true)
                <div class="form-group">
                    <p>
                        @Html.LabelFor(p => p.Title, new { @class = "text-info" })
                    </p>
                    @Html.ValidationMessageFor(p => p.Title)
                    @Html.TextBoxFor(p => p.Title, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <p>
                        @Html.LabelFor(p => p.Description, new { @class = "text-info" })
                    </p>
                    @Html.ValidationMessageFor(p => p.Description)
                    @Html.TextAreaFor(p => p.Description, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <p>
                        @Html.LabelFor(p => p.CategoryId, new { @class = "text-info" })
                    </p>

                    @Html.ValidationMessageFor(p => p.CategoryId, "Category is required")
                    @Html.DropDownListFor(p => p.CategoryId, new SelectList(ViewBag.ListBoxForCategoryIds, "Value", "Text", ""))
                </div>

                <div class="form-group">
                    <p>
                        @Html.LabelFor(p => p.Amount, new { @class = "text-info" })
                    </p>
                    @Html.ValidationMessageFor(p => p.Amount)
                    @Html.TextAreaFor(p => p.Amount, new { @class = "form-control" })
                </div>

                <div class="form-group dateInputDiv">
                    <p>
                        @Html.LabelFor(p => p.Date, new { @class = "text-info" })
                    </p>
                    @Html.ValidationMessageFor(p => p.Date)
                    @Html.TextBoxFor(p => p.Date, new { @class = "form-control transactionDate", placeholder = "MM/DD/YYYY" })
                </div>


                <div class="form-group">
                    <button type="submit">Submit</button>
                </div>
            </form>
        </div>










    }
}